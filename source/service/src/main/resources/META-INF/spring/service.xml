<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="data.xml"/>

    <context:component-scan base-package="com.myapp.service"/>

    <!-- this is the object that will be proxied by Spring's AOP infrastructure -->
    <!--<bean id="fooService" class="com.myapp.service.aop.DefaultFooService"/>-->

    <!-- this is the actual advice itself -->
    <!--<bean id="profiler" class="com.myapp.service.aop.SimpleProfiler"/>-->

    <!--<aop:config>-->
        <!--<aop:aspect ref="profiler">-->
            <!--<aop:pointcut id="theExecutionOfSomeFooServiceMethod"-->
                          <!--expression="execution(* com.myapp.service.aop.FooService.getFoo(String,int)) and args(name, age)"/>-->

            <!--<aop:around pointcut-ref="theExecutionOfSomeFooServiceMethod" method="profile"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!--<bean id="propertyEditorSample" class="com.myapp.service.propertyEditor.DependsOnExoticType">-->
        <!--<property name="type" value="aNameForExoticType"/>-->
    <!--</bean>-->

    <!--<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">-->
        <!--<property name="customEditors">-->
            <!--<map>-->
                <!--<entry key="com.myapp.service.propertyEditor.ExoticType" value="com.myapp.service.propertyEditor.ExoticTypeEditor"/>-->
            <!--</map>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="eventService" class="com.myapp.service.event.EventService">-->
        <!--<property name="blackList">-->
            <!--<list>-->
                <!--<value>a</value>-->
                <!--<value>b</value>-->
                <!--<value>c</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="blackListNotifier1" class="com.myapp.service.event.BlackListNotifier1"/>-->

    <!--<bean id="blackListNotifier2" class="com.myapp.service.event.BlackListNotifier2"/>-->

    <!--<alias name="userDao1" alias="myUserDao"/>-->

    <!--<bean id="userService" class="com.myapp.service.user.UserServiceImpl">-->
        <!--<constructor-arg name="userDao" ref="userDao1"/>-->
    <!--</bean>-->

    <!--<bean id="userService2" class="com.myapp.service.user.UserServiceImpl">-->
        <!--<constructor-arg name="addressDao" ref="addressDao"/>-->
        <!--<constructor-arg name="userDao" ref="userDao1"/>-->
    <!--</bean>-->

    <!--<bean id="userService" class="com.myapp.service.user.UserServiceImpl">-->
    <!--</bean>-->

</beans>